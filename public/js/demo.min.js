requirejs.config({baseUrl:"js/lib/",paths:{jquery:"jquery-2.0.3.min",ractive:"ractive",fade:"ractive-transitions-fade",bootstrap:"bootstrap.min"},shim:{bootstrap:{deps:["jquery"],exports:"bootstrap"},ractive:{exports:"Ractive"}}});
require(["jquery","ractive","bootstrap","fade"],function(b,k){function c(){b.ajax("http://localhost:8080/battery",{dataType:"json",jsonp:!1}).then(function(d){a.set("batteryUpdateError",!1);var b=d.timeToEmpty,e=d.state;a.animate("batteryPercent",parseInt(d.percentage,10),{easing:"easeOut"});a.set("batteryLife",b);a.set("batteryState",e);a.set("batteryCharging","discharging"!==e)}).fail(function(){a.set("batteryUpdateError",!0)})}function f(){b.ajax("http://localhost:8080/networks",{dataType:"json",
jsonp:!1}).then(function(d){a.set("networksUpdateError",!1);a.set("wifiNetworks",d)}).fail(function(){a.set("networksUpdateError",!0)})}var g=null,h=null,a=new k({el:"panels",template:"#meterVizTemplate",data:{batteryRedThreshold:15,batteryYellowThreshold:55,batteryPercent:NaN,batteryLife:"",batteryPaused:!1,batteryUpdateError:!1,batteryCharging:!1,networks:[],networksPaused:!1,networksUpdateError:!1,selectedNetworkItem:null,selectedNetwork:null,batteryStateClass:function(a){return"discharging"===
a?"battery-red":"battery-green"},batteryLifeClass:function(a){return 15>=a?"battery-red":55>=a?"battery-yellow":"battery-green"},isNetworkEncrypted:function(a){return"on"===a["Encryption key"]}}});a.on({"battery-pause":function(){clearInterval(g);a.set("batteryPaused",!0)},"battery-play":function(){c();g=setInterval(c,12E4);a.set("batteryPaused",!1)},"networks-pause":function(){clearInterval(h);a.set("networksPaused",!0)},"networks-play":function(){f();h=setInterval(f,5E3);a.set("networksPaused",
!1)},expandWifi:function(d){var c=a.get("selectedNetworkItem"),e=b(d.node);c&&b.isFunction(c.toggleClass)&&c.toggleClass("active");e.toggleClass("active");a.set("selectedNetworkItem",e);a.set("selectedNetwork",d.context)}});g=setInterval(c,12E4);h=setInterval(f,5E3);c();f();b("[data-toggle='tooltip']").tooltip({container:b("body")})});
